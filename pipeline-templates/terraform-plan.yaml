jobs:
  - job: Plan_${{ parameters.zone }}
    pool:
      vmImage: ${{ parameters.agentPool }}
    steps:
      - checkout: self
      - checkout: cnp-azuredevops-libraries
      - task: Bash@3
        displayName: Terraform install (tfenv)
        inputs:
          filePath: $(System.DefaultWorkingDirectory)/cnp-azuredevops-libraries/scripts/tfenv-install-terraform.sh
      - script: |
          which terraform
          terraform --version
          ls -lash
          tree
      - task: TerraformCLI@0
        displayName: Init - ${{ parameters.zone }}
        inputs:
          command: 'init'
          commandOptions: '-lock=false' #'-lock=false'  don't lock on PRs / validate phase
          backendType: 'azurerm'
          backendServiceArm: ${{ parameters.backendServiceArm }}
          backendAzureRmResourceGroupName: ${{ parameters.backendAzureRmResourceGroupName }}
          backendAzureRmStorageAccountName: ${{ parameters.backendAzureRmStorageAccountName }}
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'private-dns/${{ parameters.zone }}.tfstate'
          ensureBackend: false
          workingDirectory: '$(System.DefaultWorkingDirectory)/components/${{ parameters.zone }}'
      - task: TerraformCLI@0
        displayName: Plan - ${{ parameters.zone }}
        inputs:
          command: 'plan'
          commandOptions: '-out=${{ parameters.zone }}${{ parameters.build }}plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/components/${{ parameters.zone }}'
          environmentServiceName: ${{ parameters.backendServiceArm }}
      - task: Bash@3
        displayName: "Remove local tfstate"
        inputs:
          targetType: 'inline'
          workingDirectory: '$(System.DefaultWorkingDirectory)/components/${{ parameters.zone }}'
          script: |
            rm -f terraform.tfstate* && rm -rf .terraform/
      - publish: $(System.DefaultWorkingDirectory)/components/${{ parameters.zone }}/${{ parameters.zone }}${{ parameters.build }}plan
        artifact: ${{ parameters.zone }}${{ parameters.build }}plan
