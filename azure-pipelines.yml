 # trigger master branch
trigger:
  batch: true
  branches:
    include:
      - master

# repo to use - cnp
resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

# cnp-azuredevops-libraries
variables:
  - name: timeoutInMinutes
    value: "60"
  - name: agentPool
    value: "ubuntu-18.04"
  - name: build
    value: $(Build.BuildNumber)
  - name: product
    value: "cft-platform"
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy

  - name: environment_components
    type: object
    default:
    - deployment: 'sandbox'
      environment: 'sbox'
      component: 'sandbox'
      service_connection: 'dts-cftsbox-intsvc'
      dependsOn: 'Precheck'
    - deployment: 'dev'
      environment: 'dev'
      component: 'dev'
      service_connection: 'dts-cftptl-intsvc'
      dependsOn: 'Precheck'
    - deployment: 'test'
      environment: 'test'
      component: 'test'
      service_connection: 'dts-cftptl-intsvc'
      dependsOn: 'Precheck'

# precheck stage
stages:
  - stage: Precheck
    jobs:
      - job:
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'DCD-CFTAPPS-SBOX'

  - ${{ each deployment in parameters.environment_components }}:
    - stage: Terraform_Run
      displayName: "Terraform Plan and Apply ${{ deployment.environment }}"
      jobs:
        - job: TerraformPlanApply
          pool:
            vmImage: ${{ variables.agentPool }}
          timeoutInMinutes: ${{ variables.timeoutInMinutes }}
          steps:
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              product: ${{ variables.product }}
              overrideAction: ${{ parameters.overrideAction }}
              environment: ${{ deployment.environment }}
              component: ${{ deployment.component }}
              serviceConnection: ${{ deployment.service_connection }}
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
