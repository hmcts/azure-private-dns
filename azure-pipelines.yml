trigger:
  batch: true
  branches:
    include:
      - master

variables:
  terraformVersion: 0.12.23
  agentPool: 'ubuntu-18.04'

stages:
  - stage: Plan_phase
    displayName: "Terraform Plan"
    jobs:
      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'sandbox'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftsbox-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftsboxintsvc'

      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'preview'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'

      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'aat'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'

      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'perftest'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'

      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'ithc'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'

      - template: pipeline-templates/terraform-plan.yaml
        parameters:
          zone: 'demo'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'

      - job: Archive
        pool:
          vmImage: ${{ variables.agentPool }}
        steps:
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
            inputs:
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'

  - stage: Sandbox_Apply
    dependsOn: Plan_phase
    displayName: "Sandbox Apply"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'sandbox'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftsbox-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftsboxintsvc'

      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'preview'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'

      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'aat'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'

      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'perftest'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'

      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'ithc'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'

      - template: pipeline-templates/terraform-apply.yaml
        parameters:
          zone: 'demo'
          build: $(Build.BuildNumber)
          agentPool: ${{ variables.agentPool }}
          terraformVersion: ${{ variables.terraformVersion }}
          backendServiceArm: 'dts-cftptl-intsvc'
          backendAzureRmResourceGroupName: 'core-infra-intsvc-rg'
          backendAzureRmStorageAccountName: 'cftptlintsvc'
